async function i(n,r={}){let t;if(r.connector)t=r.connector;else{const{connections:e,current:c}=n.state;t=e.get(c)?.connector}const o=n.state.connections;t&&(await t.disconnect(),t.emitter.off("change",n._internal.events.change),t.emitter.off("disconnect",n._internal.events.disconnect),t.emitter.on("connect",n._internal.events.connect),o.delete(t.uid)),n.setState(e=>{if(o.size===0)return{...e,connections:new Map,current:null,status:"disconnected"};const c=o.values().next().value;return{...e,connections:new Map(o),current:c.connector.uid}});{const e=n.state.current;if(!e)return;const c=n.state.connections.get(e)?.connector;if(!c)return;await n.storage?.setItem("recentConnectorId",c.id)}}export{i as d};
