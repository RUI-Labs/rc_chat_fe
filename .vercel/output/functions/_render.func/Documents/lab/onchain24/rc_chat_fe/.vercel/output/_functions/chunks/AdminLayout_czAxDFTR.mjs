import { p as createComponent, q as renderTemplate, t as addAttribute, w as renderHead, x as renderComponent, z as renderSlot, v as createAstro } from './astro/server_BtvYfb51.mjs';
/* empty css                        */
import { B as Button } from './index_CgHqcgaf.mjs';

const $$Astro = createAstro();
const $$AdminLayout = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$AdminLayout;
  const url = Astro2.url.pathname;
  let projectSlug = url.match(/\/admin\/project\/([^\/]*)/)?.[1];
  return renderTemplate`<html lang="en"> <head><meta charset="utf-8"><link rel="icon" type="image/svg+xml" href="/favicon.svg"><meta name="viewport" content="width=device-width"><meta name="generator"${addAttribute(Astro2.generator, "content")}><title>Astro</title><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="anonymous"><link rel="preconnect" href="https://fonts.googleapis.com" crossorigin="anonymous"><link href="https://fonts.googleapis.com/css2?family=Sora:wght@100..800&display=swap" rel="stylesheet" crossorigin="anonymous">${renderHead()}</head> <body${addAttribute(`w-full h-full min-h-screen grid grid-rows-[auto_1fr] bg-stone-900`, "class")}>  <nav class="w-full border-b border-b-stone-700 bg-stone-800 p-4 grid grid-cols-3"> <div class="w-full flex justify-start items-center space-x-2 col-span-2"> <img class="rounded-md overflow-hidden w-10 h-10" src="/logo.png"> <div class="font-brand font-bold text-lg ml-2 mr-4 text-white">REMO</div> <div class="w-[200px] flex justify-center items-center"> ${renderComponent($$result, "ProjectDropdown", null, { "client:only": "vue", "wallet": Astro2.locals.user?.id, "client:component-hydration": "only", "client:component-path": "@/components/admin/ProjectDropdown.vue", "client:component-export": "default" })} </div> <a${addAttribute(`/admin/project/${projectSlug}`, "href")}> ${renderComponent($$result, "Button", Button, { "class": "text-white hover:bg-stone-700 hover:text-stone-100", "variant": "ghost" }, { "default": ($$result2) => renderTemplate`Campaigns` })} </a> <a${addAttribute(`/admin/project/${projectSlug}/users`, "href")}> ${renderComponent($$result, "Button", Button, { "class": "text-white hover:bg-stone-700 hover:text-stone-100", "variant": "ghost" }, { "default": ($$result2) => renderTemplate`Users` })} </a> <a${addAttribute(`/admin/chat`, "href")}> ${renderComponent($$result, "Button", Button, { "class": "text-white hover:bg-stone-700 hover:text-stone-100", "variant": "ghost" }, { "default": ($$result2) => renderTemplate`Chat` })} </a> </div> <div class="w-full flex justify-end items-center"> ${renderComponent($$result, "Xmtpclient", null, { "client:only": "vue", "client:component-hydration": "only", "client:component-path": "@/components/admin/Xmtpclient.vue", "client:component-export": "default" })} ${renderComponent($$result, "SignOutButton", null, { "client:only": "vue", "client:component-hydration": "only", "client:component-path": "@/components/SignOutButton.vue", "client:component-export": "default" })} </div> </nav> ${renderSlot($$result, $$slots["default"])} </body></html>`;
}, "/Users/junyaoc/Documents/lab/onchain24/rc_chat_fe/src/layouts/AdminLayout.astro", void 0);

export { $$AdminLayout as $ };
